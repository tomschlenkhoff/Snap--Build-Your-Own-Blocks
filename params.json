{"name":"snappi","tagline":"Easy visual programming environment for everybody that interfaces with the Raspberry Pi. Think open-source 'Lego Mindstorm', a hacker's dream!","body":"Combine the power of [Scratch](http://en.wikipedia.org/wiki/Scratch_(programming_language) with the affordability and fun of the [Raspberry Pi](http://en.wikipedia.org/wiki/Raspberry_Pi) single-board computer.\r\n\r\nPlenty of things are already in place, like the fantastic [SNAP programming environment](http://snap.berkeley.edu/run) (try it, click on the link!), which is just like Scratch, only better :).\r\n\r\n## For now we need help in the following areas:\r\n\r\n1. To help others in getting **snappi** up and running quickly we need to reduce dependencies. Currently the package [webiopi](https://code.google.com/p/webiopi/) presents a REST-interface to the Pi and other single-board computers. This requires a separate python daemon to run. It would be great if someone came up with a way to cut out webiopi and use javascript directly to interface the Pi.\r\n\r\n2. Currently the SNAP-program is executed in the browser's JavaScript interpreter. This works as long as the browser is connected to the Pi. To enable 'untethered' operation (e.g. the Pi driving autonomously a Lego vehicle) **snappi** would need to run in the (e.g.) V8/node.js JavaScript interpreter as a stand-alone program on the Pi.\r\n\r\n3. Currently variables can be used to interface with the Pi and read/write channels on the Piface-Board. Maybe there is a better way to integrate the i/o possibilities with the SNAP language.\r\n\r\nThat's all folks! I would be gladly accepting pull requests or any help whatsoever. Questions? tom@snappi.net","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}